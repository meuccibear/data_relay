<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.5.4</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.zp</groupId>
    <artifactId>data_relay</artifactId>
    <version>0.0.1</version>
    <packaging>jar</packaging>
    <name>data-relay</name>
    <description>data-relay</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <springboot.version>2.2.2.RELEASE</springboot.version>
        <logback.version>1.2.3</logback.version>
        <org.slf4j.version>1.7.21</org.slf4j.version>
        <spring-version>4.3.5.RELEASE</spring-version>
        <!-- 打包跳过单元测试 -->
        <skipTests>true</skipTests>

        <mybatisplus.version>3.3.1</mybatisplus.version>
        <mysql.version>8.0.17</mysql.version>
        <mssql.version>4.0</mssql.version>
        <oracle.version>11.2.0.3</oracle.version>
        <druid.version>1.1.13</druid.version>
        <quartz.version>2.3.0</quartz.version>
        <commons.lang.version>2.6</commons.lang.version>
        <commons.fileupload.version>1.2.2</commons.fileupload.version>
        <commons.io.version>2.5</commons.io.version>
        <commons.codec.version>1.10</commons.codec.version>
        <commons.configuration.version>1.10</commons.configuration.version>
        <shiro.version>1.4.0</shiro.version>
        <jwt.version>0.7.0</jwt.version>
        <kaptcha.version>0.0.9</kaptcha.version>
        <qiniu.version>7.2.23</qiniu.version>
        <aliyun.oss.version>2.8.3</aliyun.oss.version>
        <qcloud.cos.version>4.4</qcloud.cos.version>
        <swagger.version>2.7.0</swagger.version>
        <joda.time.version>2.9.9</joda.time.version>
        <gson.version>2.8.5</gson.version>
        <fastjson.version>1.2.72</fastjson.version>
        <hutool.version>4.1.1</hutool.version>
        <lombok.version>1.18.4</lombok.version>
        <!--		<xiaoymin.knife4j.version>2.0.8</xiaoymin.knife4j.version>-->
        <xiaoymin.knife4j.version>2.0.5</xiaoymin.knife4j.version>
        <boot-jar-output>./dist</boot-jar-output>

        <!--wagon plugin 配置-->
        <service-path>/work/renren</service-path>
        <pack-name>${project.artifactId}-${project.version}.jar</pack-name>
        <remote-addr>192.168.1.10:22</remote-addr>
        <remote-username>root</remote-username>
        <remote-passwd>123456</remote-passwd>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.alibaba/fastjson -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <extensions>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ssh</artifactId>
                <version>2.8</version>
            </extension>
        </extensions>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <fork>true</fork>
                </configuration>
            </plugin>
            <!-- 跳过单元测试 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>

<!--            <plugin>-->
<!--                <groupId>org.codehaus.mojo</groupId>-->
<!--                <artifactId>wagon-maven-plugin</artifactId>-->
<!--                <version>1.0</version>-->
<!--                <configuration>-->
<!--                    <fromFile>target/${pack-name}</fromFile>-->
<!--                    <url><![CDATA[scp://${remote-username}:${remote-passwd}@${remote-addr}${service-path}]]></url>-->
<!--                    <commands>-->
<!--                        &lt;!&ndash; Kill Old Process &ndash;&gt;-->
<!--                        <command>kill -9 `ps -ef |grep ${project.artifactId}.jar|grep -v "grep" |awk '{print $2}'`-->
<!--                        </command>-->
<!--                        &lt;!&ndash; Restart jar package，write result into renren.log &ndash;&gt;-->
<!--                        <command>-->
<!--                            <![CDATA[nohup java -jar ${service-path}/${pack-name} &#45;&#45;spring.profiles.active=test > ${service-path}/renren.log 2>&1 & ]]></command>-->
<!--                        <command><![CDATA[netstat -nptl]]></command>-->
<!--                        <command><![CDATA[ps -ef | grep java | grep -v grep]]></command>-->
<!--                    </commands>-->
<!--                    &lt;!&ndash; 运行命令 mvn clean package wagon:upload-single wagon:sshexec&ndash;&gt;-->
<!--                    <displayCommandOutputs>true</displayCommandOutputs>-->
<!--                </configuration>-->
<!--            </plugin>-->
<!--            <plugin>-->
<!--                <groupId>com.spotify</groupId>-->
<!--                <artifactId>docker-maven-plugin</artifactId>-->
<!--                <version>0.4.14</version>-->
<!--                &lt;!&ndash;<executions>&ndash;&gt;-->
<!--                &lt;!&ndash;<execution>&ndash;&gt;-->
<!--                &lt;!&ndash;<phase>package</phase>&ndash;&gt;-->
<!--                &lt;!&ndash;<goals>&ndash;&gt;-->
<!--                &lt;!&ndash;<goal>builds</goal>&ndash;&gt;-->
<!--                &lt;!&ndash;</goals>&ndash;&gt;-->
<!--                &lt;!&ndash;</execution>&ndash;&gt;-->
<!--                &lt;!&ndash;</executions>&ndash;&gt;-->
<!--                <configuration>-->
<!--                    &lt;!&ndash;					<pushImage>true</pushImage>&ndash;&gt;-->
<!--                    <imageName>zhuozhuang/${project.artifactId}:${project.version}</imageName>-->
<!--                    <dockerDirectory>${project.basedir}</dockerDirectory>-->
<!--                    <resources>-->
<!--                        <resource>-->
<!--                            <targetPath>/</targetPath>-->
<!--                            <directory>${project.build.directory}</directory>-->
<!--                            <include>${project.build.finalName}.jar</include>-->
<!--                        </resource>-->
<!--                    </resources>-->
<!--                    &lt;!&ndash;					<serverId>docker-hub</serverId>&ndash;&gt;-->
<!--                </configuration>-->
<!--                &lt;!&ndash; 运行命令 mvn clean package docker:build 打包并生成docker镜像 &ndash;&gt;-->
<!--            </plugin>-->
        </plugins>
    </build>

<!--    <repositories>-->
<!--        <repository>-->
<!--            <id>public</id>-->
<!--            <name>aliyun nexus</name>-->
<!--            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>-->
<!--            <releases>-->
<!--                <enabled>true</enabled>-->
<!--            </releases>-->
<!--        </repository>-->
<!--    </repositories>-->

<!--    <pluginRepositories>-->
<!--        <pluginRepository>-->
<!--            <id>public</id>-->
<!--            <name>aliyun nexus</name>-->
<!--            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>-->
<!--            <releases>-->
<!--                <enabled>true</enabled>-->
<!--            </releases>-->
<!--            <snapshots>-->
<!--                <enabled>false</enabled>-->
<!--            </snapshots>-->
<!--        </pluginRepository>-->
<!--    </pluginRepositories>-->

</project>
